---
- name: Create Docker compose directory in all nodes
  file:
    path: "{{ awx_compose_dir }}"
    state: directory
- name: Generate broadcast websocket secret
  set_fact:
    broadcast_websocket_secret: "{{ lookup('password', '/dev/null length=128') }}"

- name: Create AWX project directory in all nodes
  file:
    path: "{{ awx_compose_dir }}/projects"
    state: directory

- name: Create Redis socket directory
  file:
    path: "{{ awx_compose_dir }}/redis_socket"
    state: directory
    mode: 0777
  
- name: Define system UUID
  shell: "echo 'import uuid; print(uuid.uuid4())' | python; touch {{ awx_compose_dir }}/system_uuid_generated.txt"
  args:
    chdir: "{{ awx_compose_dir }}"
    creates: system_uuid_generated.txt
  register: system_uuid_generate

- debug:
    var: system_uuid_generate.stdout

- name: Write system UUID
  shell: "echo {{ system_uuid_generate.stdout }} > {{ awx_compose_dir }}/system_uuid.txt"
  when:
    - system_uuid_generate is changed

- name: Get system UUID
  shell: "cat {{ awx_compose_dir }}/system_uuid.txt"
  register: system_uuid

- debug:
    var: system_uuid.stdout

- name: Template Docker compose and AWX configs
  template:
    src: "{{ item.src }}"
    dest: "{{ awx_compose_dir }}/{{ item.dst }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src: docker-compose.yml.j2, dst: docker-compose.yml, mode: "0600" }
    - { src: settings.py.j2, dst: settings.py, mode: "0600" }
    - { src: credentials.py.j2, dst: credentials.py, mode: "0600" }
    - { src: redis.conf.j2, dst: redis.conf, mode: "0664" }
    - { src: nginx.conf.j2, dst: nginx.conf, mode: "0600" }
    - { src: awxweb.pem.j2, dst: awxweb.pem, mode: "0600" }
    - { src: environment.sh.j2, dst: environment.sh, mode: "0600" }
    - { src: SECRET_KEY.j2, dst: SECRET_KEY, mode: "0600" }
  when: inventory_hostname in groups['awx_instance_group_main']
  register: config_state_primary

- name: Template AWX launcher files
  template:
    src: "{{ item.src }}"
    dest: "{{ awx_compose_dir }}/{{ item.dst }}"
    mode: 0744
  with_items:
    - { src: launch_awx_task.sh.j2, dst: launch_awx_task.sh }
    - { src: launch_awx.sh.j2, dst: launch_awx.sh }
  when: inventory_hostname in groups['awx_instance_group_main']
  register: launcher_state_primary

- name: Template AWX /root/.ssh/config to Task Nodes
  template:
    src: "{{ item.src }}"
    dest: "{{ awx_compose_dir }}/{{ item.dst }}"
    mode: 0600
  with_items:
    - { src: ssh_config.j2, dst: ssh_config }
  when: awx_isolated_nodes | bool
  register: config_ssh_state

- name: Template AWX /root/.ssh/id's to Task Nodes
  copy:
    content: "{{ item.value }}"
    dest: "{{ awx_compose_dir }}/{{ item.key }}"
    mode: 0600
  with_dict: "{{ awx_isolated_ssh_keys_private }}"
  when:
    - awx_isolated_nodes | bool
    - awx_isolated_ssh_keys_external | bool
  register: ssh_id_state
